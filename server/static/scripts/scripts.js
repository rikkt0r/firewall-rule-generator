"use strict";function networkGraph(){var e={restrict:"E",templateUrl:"/static/scripts/directives/networkGraph/network-graph.html",scope:{hosts:"="},controller:networkGraphCtrl,controllerAs:"vm"};return e}function networkGraphCtrl(e){var t=[],r=[],n=null,o="../../images/",s=function(e){function t(e){var t={id:e.id,label:e.name,image:o+"host1.png",shape:"image"};r.push(t)}if(!Array.isArray(e))return[];var r=[];return e.forEach(t),r};t=s(e.hosts),e.nodes=t,e.edges=r;var a=function(){var t=document.getElementById("mynetwork"),r={nodes:e.nodes,edges:e.edges},o={};n=new vis.Network(t,r,o)};e.draw=a,e.$evalAsync(function(){e.draw()})}function networkList(){var e={restrict:"E",templateUrl:"/static/scripts/directives/networkList/network-list.html",scope:{hosts:"="},controller:networkListCtrl,controllerAs:"vm"};return e}function networkListCtrl(e,t){function r(e,t,r,n,o){e.host=n,e.confirm=function(){t.removeHost(n.id).then(function(){r.dismiss("removed"),o=t.getHosts(!0)})},e.cancel=function(){r.dismiss("cancel")}}e.confirmDelete=function(n){var o=t.open({animation:e.animationsEnabled,scope:e,templateUrl:"delete-confirmation-modal.html",size:"small",controller:r,resolve:{Host:function(){return n},Hosts:function(){return e.hosts}}});o.result.then(function(e){},function(){})},e.toggleAnimation=function(){e.animationsEnabled=!e.animationsEnabled},e.getType=function(e){switch(e){case 1:return"PC/Laptop";case 2:return"Server";case 3:return"Firewall";default:return"Other"}}}var app=angular.module("yapp",["ui.router","ngAnimate","validation","ui.bootstrap","ngSanitize"]);app.constant("API_CONFIG",{url:"http://localhost",port:"8000",endpoints:{hosts:"/api/hosts/",rules:"/api/rules",available:"/api/available"}}),app.config(["$stateProvider","$urlRouterProvider",function(e,t){t.when("/dashboard","/overview"),e.state("base",{"abstract":!0,url:"",templateUrl:"/static/views/base.html"}).state("dashboard",{url:"",parent:"base",templateUrl:"/static/views/dashboard.html",controller:"DashboardCtrl"}).state("addnew",{url:"/addnew",parent:"dashboard",templateUrl:"/static/views/entries/addnew.html",controller:"AddNewCtrl"}).state("overview",{url:"/overview",parent:"dashboard",templateUrl:"/static/views/dashboard/overview.html"}).state("generate",{url:"/generate",parent:"dashboard",controller:"GenerateCtrl",templateUrl:"views/generate/index.html"}).state("reports",{url:"/reports",parent:"dashboard",templateUrl:"/static/views/dashboard/reports.html"}).state("hosts",{url:"/hosts","abstract":!0,parent:"dashboard",template:"<ui-view/>",controller:"HostsCtrl"}).state("hosts-index",{url:"/index","abstract":!0,parent:"hosts",templateUrl:"/static/views/hosts/list.html",controller:"HostsCtrl"}).state("hosts-list",{url:"/list",parent:"hosts",templateUrl:"/static/views/hosts/list.html",controller:"HostsCtrl"}).state("hosts-graph",{url:"/graph",parent:"hosts",templateUrl:"/static/views/hosts/graph.html",controller:"HostsCtrl"}).state("hosts-rule-add",{url:"/rule/:id",parent:"hosts",templateUrl:"/static/views/hosts/rule/add.html",controller:"HostRuleCtrl"}).state("hosts-show",{url:"/:id",parent:"hosts",templateUrl:"/static/views/hosts/show.html",controller:"HostShowCtrl"}).state("hosts-add",{url:"/add",parent:"hosts",templateUrl:"/static/views/hosts/add.html",controller:"HostAddCtrl"})}]),angular.module("yapp").factory("IpTablesService",["$http","API_CONFIG",function(e,t){var r=[],n=[],o=function(e){return t.url+":"+t.port+t.endpoints[e]},s=function(t){return t=t?!0:!1,e.get(o("hosts"),{cache:t}).then(function(e){return r=e.data.hosts},function(){return!1})},a=function(t,n){return n=n?!0:!1,e.get(o("hosts")+t,{cache:n}).then(function(e){return r=e.data.hosts},function(){return!1})},i=function(t){return n.length&&!t?n:e.get(o("rules")).then(function(e){return n=e.data,e.data},function(){return!1})},l=function(t){return e["delete"](o("hosts")+t+"/").then(function(e){return e.data},function(){return!1})},u=function(t){return e({method:"POST",url:o("hosts"),data:t}).then(function(e){return e.data},function(){return!1})},c=function(t,r){delete r.id,r.htype=1*r.htype;for(var n=0;n<r.interfaces.length;n++)r.interfaces[n].netmask=r.interfaces[n].netmask;return e({method:"PUT",url:o("hosts")+t+"/",data:r}).then(function(e){return e.data},function(){return!1})},d=function(){return b("modules")},h=function(){return b("tables")},p=function(){return b("chains")},f=function(){return b("templates")},m=function(t){var r=o("available")+"/template/"+t;return e.get(r).then(function(e){return e.data},function(){return!1})},v=function(){return b("actions")},g=function(){return b("loglevels")},b=function(t){if(["modules","chains","loglevels","tables","actions","templates"].indexOf(t)<0)throw"invalid option";var r=o("available")+"/"+t;return e.get(r).then(function(e){return e.data[t]},function(){return!1})},w=function(t,r){return e({method:"POST",url:o("hosts")+t+"/rules/",data:r}).then(function(e){return e.data},function(){return!1})},i=function(t){return e({method:"GET",url:o("hosts")+t+"/rules/"}).then(function(e){return e.data},function(){return!1})},y=function(t,r){return e({method:"DELETE",url:o("hosts")+t+"/rules/"+r+"/"}).then(function(e){return e.data},function(){return!1})},$=function(t){return e({method:"GET",url:o("hosts")+t+"/generate/iptables/"}).then(function(e){return e.data},function(){return!1})};return{getHosts:s,getHost:a,addHost:u,editHost:c,removeHost:l,getRules:i,getAvailable:b,getModules:d,getTables:h,getChains:p,getTemplates:f,getActions:v,getLogLevels:g,getTemplate:m,addRule:w,getRules:i,removeRule:y,generate:$}}]),angular.module("yapp").controller("LoginCtrl",["$scope","$location",function(e,t){e.submit=function(){return t.path("/dashboard"),!1}}]),angular.module("yapp").controller("DashboardCtrl",["$scope","$state","IpTablesService",function(e,t,r){e.$state=t,r.getHosts().then(function(t){e.hosts=t})}]),angular.module("yapp").controller("HostsCtrl",["$scope","$state","$location","$stateParams","IpTablesService",function(e,t,r,n,o){e.$state=t,o.getHosts().then(function(t){e.hosts=t}),e.go=function(e){r.path(e)}}]).controller("HostShowCtrl",["$scope","$state","$location","$stateParams","IpTablesService",function(e,t,r,n,o){e.$state=t;var s=n.id;e.rules=[],o.getHosts(!1).then(function(t){e.hosts=t;for(var r=0,n=t.length;n>r;r++)if(s==t[r].id){e.host=t[r],o.getRules(e.host.id).then(function(t){e.rules=t.rules});break}}),e.rules=[],e.oldHost={},e.editMode=!1,e.toggleEdit=function(){e.editMode===!1&&angular.copy(e.host,e.oldHost),e.editMode=!e.editMode},e.cancelEdit=function(){angular.copy(e.oldHost,e.host),e.oldHost={},e.editMode=!1},e.save=function(){o.editHost(e.host.id,e.host),t.go(t.current,{},{reload:!0})},e.htypeOptions=[{id:1,value:"PC/Laptop"},{id:2,value:"Server"},{id:3,value:"Firewall"},{id:4,value:"Other"}],e.getHostType=function(e){switch(e){case 1:return"PC/Laptop";case 2:return"Server";case 3:return"Firewall";default:return"Other"}},e.htypeSelected=function(e){return e==host.htype},e.removeinterface=function(t){e.host.interfaces.splice(t,1)},e.removeRule=function(r){o.removeRule(e.host.id,r).then(function(){t.go(t.current,{},{reload:!0})})},e.newinterface={ip:"",sys:"",netmask:0,desc:""},e.addinterface=function(){if(!(e.newinterface.ip&&e.newinterface.netmask&&e.newinterface.sys))return!1;var t={};angular.copy(e.newinterface,t),e.newinterface={ip:"",sys:"",netmask:0,desc:""},t.netmask=1*t.netmask,e.host.interfaces.push(t)},e.interfaceValid=function(){return e.host["interface"].ip&&e.host["interface"].netmask&&e.host["interface"].sys},e.addRule=function(){r.path("/hosts/rule/"+e.host.id)}}]).config(["$validationProvider",function(e){var t={required:function(e){return!!e},email:/^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/,number:/^\d+$/,ip:/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/,minlength:function(e,t,r,n,o){return e.length>=o},maxlength:function(e,t,r,n,o){return e.length<=o}},r={required:{error:"This fild is mandatory"},number:{error:"This should be Number"},ip:{error:"This should be IPv4 address"},minlength:{error:"This should be longer"},maxlength:{error:"This should be shorter"}};e.setExpression(t).setDefaultMsg(r),e.setExpression({range:function(e,t,r,n){return e>=parseInt(n.min)&&e<=parseInt(n.max)?e:void 0}}).setDefaultMsg({range:{error:"Number should between 5 ~ 10",success:"good"}})}]).controller("HostAddCtrl",["$scope","$http","$location","$state","$stateParams","IpTablesService",function(e,t,r,n,o,s){e.host={name:"",htype:"",interfaces:[],template_id:"",rules:""},e.tmpinterface={sys:"1.1.1.1",ip:"1.1.1.1",netmask:"2",desc:""},s.getTemplates().then(function(t){e.templates=t});var a=angular.injector(["yapp"]),i=a.get("$validation");e["interface"]={checkValid:i.checkValid,submit:function(t){e.addinterface()},reset:function(e){}},e.submit=function(){e.host.htype=1*e.host.htype,s.addHost(e.host).then(function(e){r.path("/hosts/"+e.id)})},e.removeinterface=function(t){e.host.interfaces.splice(t,1)},e.interfaceValid=function(){return e["interface"].ip&&e["interface"].netmask&&e["interface"].sys},e.addinterface=function(){var t={sys:e["interface"].sys,ip:e["interface"].ip,netmask:1*e["interface"].netmask,desc:e["interface"].desc};e.host.interfaces.push(t)}}]),angular.module("yapp").controller("HostRuleCtrl",["$scope","$state","$location","$stateParams","IpTablesService",function(e,t,r,n,o){e.host={},e.chains=[],e.tables=[],e.actions=[],e.loglevels=[{sys:"Emergency",value:0},{sys:"Alert",value:1},{sys:"Critical",value:2},{sys:"Error",value:3},{sys:"Warning",value:4},{sys:"Notice",value:5},{sys:"Informational",value:6},{sys:"Debug",value:7}],e.modules=[{sys:"tcp",desc:"TCP, enabled automatically when -p tcp",params:[{sys:"sport",desc:"source port:  port or port:port"},{sys:"dport",desc:"destination port:  port or port:port"},{sys:"tcp-flags",desc:"flags for tcp. which flags to examined <space> which should be set (ALL=SYN,ACK,FIN,RST,URG,PSH)  example: SYN,ACK FIN"}]},{sys:"udp",desc:"UDP, enabled automatically when -p udp",params:[{sys:"sport",desc:"source port:  port or port:port"},{sys:"dport",desc:"destination port:  port or port:port"}]},{sys:"icmp",desc:"ICMP, enabled automatically when -p icmp",params:[{sys:"icmp-type",desc:"type of icmp, string or number, ex: echo-request or 8"}]}],e.mode="",e.addModuleName="",e.addModuleParams=[],e.addModule=function(){var t={sys:e.addModuleName,params:[]};for(var r in e.addModuleParams)if(e.addModuleParams.hasOwnProperty(r)){var n=e.addModuleParams[r];for(var o in n)if(n.hasOwnProperty(o))var s={sys:r,value:n[o]};t.params.push(s)}e.rule.modules.push(t),e.addModuleName="",e.addModuleParams=[]},e.removeModule=function(t){e.rule.modules.splice(t,1)},e.rule={table:"filter",chain:"",protocol:"","interface":"",modules:[],action:"",params:[]},e.submit=function(){var r=s();o.addRule(e.host.id,r).then(function(r){t.go("hosts-show",{id:e.host.id},{reload:!0})})},e.cancel=function(){t.go("hosts-show",{id:e.host.id},{reload:!0})};var s=function(){var t={};t.table=e.rule.table,t.chain=e.rule.chain,t.protocol=e.rule.protocol,t.protocol_reverse=e.rule.protocol_reverse,t.source=e.rule.source,t.source_mask=1*e.rule.source_mask,t.source_reverse=e.rule.source_reverse,t.destination=e.rule.destination,t.destination_mask=1*e.rule.destination_mask,t.destination_reverse=e.rule.destination_reverse,t.action=e.rule.action,t.modules=[],"LOG"==e.rule.action&&(t.log_level=e.rule.log_level,t.log_prefix=e.rule.log_prefix),""!==e.rule.protocol&&t.modules.push({sys:e.rule.protocol,params:[]});for(var r=0;r<t.modules.length;r++)for(var n in e.rule.params)if(e.rule.params.hasOwnProperty(n)){var o=e.rule.params[n],s=[];for(var a in o)o.hasOwnProperty(a)&&s.push({sys:a,value:o[a].value});t.modules[r].params=s}return t.table=e.rule.table,t};e.getModuleParams=function(t){if(!t)return[];for(var r=0;r<e.modules.length;r++)if(t==e.modules[r].sys)return e.modules[r].params;return[]},e.getChains=function(t){if(t=t?!0:!1)return e.chains;for(var r=[],n=0;n<e.chains.length;n++)e.chains[n].advanced!==!0&&r.push(e.chains[n]);return r},e.getActions=function(t){if(t=t?!0:!1)return e.actions;for(var r=[],n=0;n<e.actions.length;n++)e.actions[n].advanced!==!0&&r.push(e.actions[n]);return r},e.setAdvancedMode=function(){e.mode="advanced"},e.setBasicMode=function(){e.mode="basic"};var a=n.id;o.getHosts(!1).then(function(t){e.hosts=t;for(var r=0,n=t.length;n>r;r++)if(a==t[r].id){e.host=t[r];break}}),o.getChains().then(function(t){e.chains=t}),o.getTables().then(function(t){e.tables=t}),o.getActions().then(function(t){e.actions=t}),o.getLogLevels().then(function(e){}),o.getModules().then(function(t){t.length&&(e.modules=t)})}]),angular.module("yapp").controller("GenerateCtrl",["$scope","$state","$location","$stateParams","IpTablesService",function(e,t,r,n,o){e.hosts=[],e.hostId="",e.output="",o.getHosts(!0).then(function(t){t.length&&(e.hosts=t)}),e.generate=function(){e.hostId&&o.generate(e.hostId).then(function(t){console.log(t),e.output="";for(var r=t.lines,n=0;n<r.length;n++)e.output+=r[n]+"\n"})}}]),angular.module("yapp").controller("AddNewCtrl",["$scope","$state",function(e,t){e.$state=t}]),angular.module("yapp").directive("networkGraph",networkGraph),networkGraphCtrl.$inject=["$scope"],angular.module("yapp").directive("networkList",networkList),networkListCtrl.$inject=["$scope","$uibModal"],function(){angular.module("validation.rule",["validation"]).config(["$validationProvider",function(e){var t={required:function(e){return!!e},email:/^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/,number:/^\d+$/,ip:/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/,minlength:function(e,t,r,n,o){return e.length>=o},maxlength:function(e,t,r,n,o){return e.length<=o}},r={required:{error:"This fild is mandatory"},email:{error:"This should be Email"},number:{error:"This should be Number"},ip:{error:"This should be IPv4 address"},minlength:{error:"This should be longer"},maxlength:{error:"This should be shorter"}};e.setExpression(t).setDefaultMsg(r)}])}.call(this);
